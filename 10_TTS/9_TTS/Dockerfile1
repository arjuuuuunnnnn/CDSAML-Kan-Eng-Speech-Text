#######################################################
#docker build . -t tts
#docker run --gpus all --ipc=host --ulimit memlock=-1 --ulimit stack=67108864  -it tts
#https://docs.coqui.ai/en/latest/docker_images.html

#######################################################
FROM nvcr.io/nvidia/pytorch:24.01-py3 
WORKDIR /TTS
RUN apt update
RUN apt-get install python3-venv -y
RUN python3 -m venv tts_env
RUN source tts_env/bin/activate
RUN python3 -m pip install --upgrade pip
RUN   \rm -rf kn.zip
RUN   \rm -rf models
RUN   \rm -rf temp_script.sh
RUN   mkdir -p models
RUN   cd models
RUN   mkdir -p v1
RUN   cd v1
RUN   wget https://github.com/AI4Bharat/Indic-TTS/releases/download/v1-checkpoints-release/kn.zip
RUN   unzip kn.zip
RUN   cd ../../.
RUN   \rm -rf Trainer
RUN   \rm -rf TTS
RUN    apt update
RUN    apt install -y libsndfile1-dev ffmpeg
#RUN   conda create -n tts-env python=3.10
#RUN   conda activate tts-env
#RUN   pip3 install -U torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu113

RUN   \rm -rf Trainer 
RUN   git clone https://github.com/gokulkarthik/Trainer 
WORKDIR /TTS/Trainer
RUN   pip3 install -e .[all]
WORKDIR /TTS
RUN   git clone https://github.com/gokulkarthik/TTS 
WORKDIR /TTS/TTS
RUN   pip3 install -r requirements.txt
RUN   pip3 install -e .[all]
WORKDIR /TTS
RUN   \rm -rf 27FEB
RUN   mkdir -p 27FEB
RUN   pip3 install TTS
RUN   export CUDA_VISIBLE_DEVICES=1
WORKDIR /TTS
COPY . .
RUN pip install --force  numpy==1.21.6
RUN pip3 install --force numpy==1.21.6
RUN python3 ./2_SENTENCE_TO_TTS.py
RUN python ./2_SENTENCE_TO_TTS.py
CMD ["/bin/bash"]